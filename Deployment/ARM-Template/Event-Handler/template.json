{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {       
        "functionAppName": {
            "defaultValue": "[concat(resourceGroup().name, '-StorageAccount-rotation-fnapp')]",
            "type": "string",
            "metadata": {
                "description": "The name of the function app that you wish to create."
            }
        },
        "roleNameGuid": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "metadata": {
                "description": "A new GUID used to identify the role assignment"
            }
        },
        "keyVaultRG": {
            "defaultValue": "[resourceGroup().name]",
            "type": "string",
            "metadata": {
                "description": "The name of the resource group where key vault has deployed."
            }
        },
        "keyVaultName": {
            "defaultValue": "armtmptest234567yu8",
            "type": "string",
            "metadata": {
                "description": "The name of the existing key vault where secrets are stored."
            }
        },
        "appServiceName": {
            "defaultValue": "StorageAccount-rotation-fnapp",
            "type": "string",
            "metadata": {
                "description": "Name of the Appservice plan"
            }
        },
        "appServicePlanType": {
			"type": "string",
			"allowedValues": [
                "Consumption Plan",
                "Premium Plan"
			],
			"defaultValue": "Consumption Plan",
			"metadata": {
			"description": "The type of App Service hosting plan. Premium must be used to access key vaults behind firewall."
			}
		},
        "functionHandlerName": {
            "defaultValue": "AKVStorageAccountRotation",
            "type": "string",
            "metadata": {
                "description": "The name of the function that handles the event"
            }
		}
    },
    "variables": {
        "functionStorageAccountName": "[concat(uniquestring(parameters('functionAppName')), 'fnappstrg')]",
        "appServiceSKU":"[if(equals(parameters('appServicePlanType'),'Consumption Plan'),'Y1','P1V2')]",
        "eventSubscriptionName": "kv-secret-near-expiry",
        // "repoURL":"https://github.com/Azure/KeyVault-Secrets-Rotation-StorageAccount-PowerShell.git",
        "repoURL":"https://github.com/arpn00/AKVSecretRotation.git"

    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[variables('functionStorageAccountName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage"
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2018-02-01",
            "name": "[concat(resourceGroup().name, '-',parameters('appServiceName'),'-plan')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "[variables('appServiceSKU')]"
            },
            "properties": {
                "name": "[concat(resourceGroup().name, '-',parameters('appServiceName'),'-plan')]"
               
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2018-09-01-preview",
            "name": "[parameters('roleNameGuid')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]",
                "[resourceId('Microsoft.Web/serverfarms', concat(resourceGroup().name, '-',parameters('appServiceName'),'-plan'))]"
            ],
            "properties": {
                "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '17d1049b-9a84-46fb-8f53-869881c3d3ab')]",
                "principalId": "[reference(resourceId('Microsoft.Web/sites', parameters('functionAppName')),'2019-08-01', 'Full').identity.principalId]",
                "principalType": "ServicePrincipal"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "name": "[parameters('functionAppName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', concat(resourceGroup().name, '-',parameters('appServiceName'),'-plan'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('functionStorageAccountName'))]",
                "[resourceId('microsoft.insights/components', parameters('functionAppName'))]"
            ],
            "kind": "functionapp",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "enabled": true,
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms',concat(resourceGroup().name,'-',parameters('appServiceName'),'-plan'))]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('functionStorageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('functionStorageAccountName')), '2019-06-01').keys[0].value)]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~3"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "powershell"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('functionStorageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('functionStorageAccountName')), '2019-06-01').keys[0].value)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTSHARE",
                            "value": "[toLower(parameters('functionAppName'))]"
                        },
                        {
                            "name": "WEBSITE_NODE_DEFAULT_VERSION",
                            "value": "~10"
                        },
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference(resourceId('microsoft.insights/components', parameters('functionAppName')), '2018-05-01-preview').InstrumentationKey]"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "type": "sourcecontrols",
                    "apiVersion": "2018-11-01",
                    "name": "web",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/Sites', parameters('functionAppName'))]"
                    ],
                    "properties": {
                        "RepoUrl": "[variables('repoURL')]",
                        "branch": "main",
                        "IsManualIntegration": true
                    }
                }
            ]
        },
        {
            "name": "[parameters('functionAppName')]",
            "type": "Microsoft.Insights/components",
            "apiVersion": "2015-05-01",
            "location": "[resourceGroup().location]",
            "kind": "web",
            "properties": {
              "Application_Type": "web"
            }
          },
        {
            "name": "kv-event-subscription-and-grant-access-and-secret-deployment",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "subscriptionId": "[subscription().subscriptionId]",
            "resourceGroup": "[parameters('keyVaultRG')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]",
                "[concat(resourceId('Microsoft.Web/sites', parameters('functionAppName')),'/sourcecontrols/web')]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "type": "Microsoft.KeyVault/vaults/accessPolicies",
                            "name": "[concat(parameters('keyVaultName'), '/add')]",
                            "apiVersion": "2019-09-01",
                            "properties": {
                                "accessPolicies": [
                                    {
                                        "tenantId": "[subscription().tenantId]",
                                        "objectId": "[reference(resourceId('Microsoft.Web/sites', parameters('functionAppName')),'2019-08-01', 'Full').identity.principalId]",
                                        "permissions": {
                                            "secrets": [
                                                "Get",
                                                "List",
                                                "Set"
                                            ]
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "kv-secret-rotation-design-pattern",
                            "type": "Microsoft.Resources/deployments",
                            "apiVersion": "2019-10-01",
                            "dependsOn": [],
                            "properties": {
                                "mode": "Incremental",
                                "template": {
                                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                    "contentVersion": "1.0.0.0",
                                    "resources": [
                                        {
                        
                                            "type": "Microsoft.KeyVault/vaults/providers/eventSubscriptions",
                                            "apiVersion": "2020-01-01-preview",
                                            "name": "[concat(parameters('keyVaultName'),'/Microsoft.EventGrid/',variables('eventSubscriptionName'))]",
                                            "location": "[resourceGroup().location]",
                                            "dependsOn": [                          
                                            ],
                                            "properties": {
                                                "destination": {
                                                    "endpointType": "AzureFunction",
                                                    "properties": {
                                                        "maxEventsPerBatch": 1,
                                                        "preferredBatchSizeInKilobytes": 64,
                                                        "resourceId": "[concat(resourceId('Microsoft.Web/sites', parameters('functionAppName')),'/functions/',parameters('functionHandlerName'))]"
                                                    }
                                                },
                                                "filter": {
                                                    "includedEventTypes": ["Microsoft.KeyVault.SecretNearExpiry"]                                  
                                                },
                                                "retryPolicy": {
                                                    "maxDeliveryAttempts": 3,
                                                    "eventTimeToLiveInMinutes": 120
                                                  }
                                            }
                                        }
                                    ]
                                }
                            }
                            
                        }
                    ]
                }
            }
        }
]
}